name: Deploy to maven

on:
  push:
    branches:
      - main

jobs:
  release-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 24

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Extract version from Gradle
        id: version
        run: |
          VERSION=$(gradle properties -q | awk -F': ' '/^version:/{print $2}')
          if [ -z "$VERSION" ]; then echo "Version not found"; exit 1; fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Git tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: v${{ steps.version.outputs.version }}
          message: "Release v${{ steps.version.outputs.version }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit_sha: ${{ github.sha }}
          force_push_tag: false
          tag_exists_error: false
          no_verify_tag: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Wersja v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Maven repository
        run: gradle publish

      - name: Upload to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: repo-zaliczto
          directory: build/repo

      - name: Check if tag exists and bump version if needed
        id: bump_version
        run: |
          VERSION=$(gradle properties -q | awk -F': ' '/^version:/{print $2}')
          TAG_EXISTS=$(gh api repos/${GITHUB_REPOSITORY}/git/refs/tags/v$VERSION --jq '.' 2>/dev/null || echo "notfound")
          if [ "$TAG_EXISTS" != "notfound" ]; then
            IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
            PATCH=$((PATCH+1))
            NEW_VERSION="$MAJOR.$MINOR.$PATCH"
            sed -i "" "s/version = '[0-9]*\.[0-9]*\.[0-9]*'/version = '$NEW_VERSION'/" build.gradle
            echo "Version $VERSION exists, bumped to $NEW_VERSION"
            echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          else
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from Gradle (after bump)
        id: version
        run: |
          VERSION=$(gradle properties -q | awk -F': ' '/^version:/{print $2}')
          if [ -z "$VERSION" ]; then echo "Version not found"; exit 1; fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
